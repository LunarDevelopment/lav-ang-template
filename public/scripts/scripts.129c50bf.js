"use strict";angular.module("ngappApp",["ngAnimate","ngAria","ngCookies","ngMessages","ngResource","ngRoute","ngSanitize","ngTouch","ui.materialize","satellizer","angularPayments","ngStorage"]).config(["$routeProvider","$authProvider","$httpProvider","$provide",function(a,b,c,d){function e(a,b){return{responseError:function(c){var d=b.get("$location"),e=b.get("$rootScope"),f=b.get("$auth"),g=b.get("Notify"),h=["token_not_provided","token_expired","token_absent","token_invalid","Internal Server Error","Unauthorized"];return angular.forEach(h,function(a,b){if(c.statusText===a){e.authenticated=!1,delete e.$storage.application_local_user,f.logout();var h={status:"ERROR",message:"Something went wrong, please log in again."};g["new"](h),d.path("/login")}}),a.reject(c)}}}e.$inject=["$q","$injector"],d.factory("redirectWhenLoggedOut",e),c.interceptors.push("redirectWhenLoggedOut"),a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).when("/login",{templateUrl:"views/login.html",controller:"LoginCtrl",controllerAs:"login"}).when("/signup",{templateUrl:"views/signup.html",controller:"SignupCtrl",controllerAs:"signup"}).when("/logout",{templateUrl:"views/logout.html",controller:"LogoutCtrl",controllerAs:"logout"}).when("/profile",{templateUrl:"views/profile.html",controller:"ProfileCtrl",controllerAs:"profile"}).otherwise({redirectTo:"/"}),b.twitter({url:"/auth/twitter"}),b.httpInterceptor=!0,b.loginOnSignup=!0,b.baseUrl="/",b.loginRedirect="/profile",b.logoutRedirect="/login",b.signupRedirect="/",b.loginUrl="/auth/login",b.signupUrl="/auth/signup",b.loginRoute="/login",b.signupRoute="/signup",b.tokenRoot=!1,b.tokenName="token",b.tokenPrefix="application_local",b.unlinkUrl="/auth/unlink/",b.unlinkMethod="get",b.authHeader="Authorization",b.authToken="Bearer",b.withCredentials=!0,b.platform="browser",b.storage="localStorage",b.github({url:"/auth/github",authorizationEndpoint:"https://github.com/login/oauth/authorize",redirectUri:window.location.origin||window.location.protocol+"//"+window.location.host,scope:["user:email"],scopeDelimiter:" ",type:"2.0",popupOptions:{width:1020,height:618}})}]).run(["$rootScope","$location","$auth","$localStorage","Account","Notify",function(a,b,c,d,e,f){var g=c.isAuthenticated();a.$storage=d,a.logout=function(){a.authenticated=!1,delete a.$storage.application_local_user,c.logout();var b={status:"OK",message:"You've logged out!"};f["new"](b)},g?g&&(a.authenticated=!0,a.$storage.application_local_user||e.getProfile().then(function(b){a.$storage.application_local_user=b})["catch"](function(a){console.log(a)})):(a.authenticated=!1,delete a.$storage.application_local_user)}]),angular.module("ngappApp").controller("MainCtrl",["$window",function(a){var b=this;b.exampleToast={duration:1e3,message:"You reached out!"}}]),angular.module("ngappApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("ngappApp").directive("passwordMatch",function(){return{require:"ngModel",scope:{otherModelValue:"=passwordMatch"},link:function(a,b,c,d){d.$validators.compareTo=function(b){return b===a.otherModelValue},a.$watch("otherModelValue",function(){d.$validate()})}}}),angular.module("ngappApp").directive("passwordStrength",function(){return{restrict:"A",require:"ngModel",link:function(a,b,c,d){var e=b.children(),f=Array.prototype.slice.call(e.children()),g=f.slice(-1)[0],h=f.slice(-2),i=f.slice(-3),j=f.slice(-4);b.after(e),b.bind("keyup",function(){var a,b={positive:{},negative:{}},c={positive:{},negative:{}},e=0;angular.forEach(f,function(a){a.style.backgroundColor="#ebeef1"}),d.$viewValue&&(b.positive.lower=d.$viewValue.match(/[a-z]/g),b.positive.upper=d.$viewValue.match(/[A-Z]/g),b.positive.numbers=d.$viewValue.match(/\d/g),b.positive.symbols=d.$viewValue.match(/[$-/:-?{-~!^_`\[\]]/g),b.positive.middleNumber=d.$viewValue.slice(1,-1).match(/\d/g),b.positive.middleSymbol=d.$viewValue.slice(1,-1).match(/[$-/:-?{-~!^_`\[\]]/g),c.positive.lower=b.positive.lower?b.positive.lower.length:0,c.positive.upper=b.positive.upper?b.positive.upper.length:0,c.positive.numbers=b.positive.numbers?b.positive.numbers.length:0,c.positive.symbols=b.positive.symbols?b.positive.symbols.length:0,c.positive.numChars=d.$viewValue.length,a+=c.positive.numChars>=8?1:0,c.positive.requirements=a>=3?a:0,c.positive.middleNumber=b.positive.middleNumber?b.positive.middleNumber.length:0,c.positive.middleSymbol=b.positive.middleSymbol?b.positive.middleSymbol.length:0,b.negative.consecLower=d.$viewValue.match(/(?=([a-z]{2}))/g),b.negative.consecUpper=d.$viewValue.match(/(?=([A-Z]{2}))/g),b.negative.consecNumbers=d.$viewValue.match(/(?=(\d{2}))/g),b.negative.onlyNumbers=d.$viewValue.match(/^[0-9]*$/g),b.negative.onlyLetters=d.$viewValue.match(/^([a-z]|[A-Z])*$/g),c.negative.consecLower=b.negative.consecLower?b.negative.consecLower.length:0,c.negative.consecUpper=b.negative.consecUpper?b.negative.consecUpper.length:0,c.negative.consecNumbers=b.negative.consecNumbers?b.negative.consecNumbers.length:0,e+=4*c.positive.numChars,c.positive.upper&&(e+=2*(c.positive.numChars-c.positive.upper)),c.positive.lower&&(e+=2*(c.positive.numChars-c.positive.lower)),(c.positive.upper||c.positive.lower)&&(e+=4*c.positive.numbers),e+=6*c.positive.symbols,e+=2*(c.positive.middleSymbol+c.positive.middleNumber),e+=2*c.positive.requirements,e-=2*c.negative.consecLower,e-=2*c.negative.consecUpper,e-=2*c.negative.consecNumbers,b.negative.onlyNumbers&&(e-=c.positive.numChars),b.negative.onlyLetters&&(e-=c.positive.numChars),e=Math.max(0,Math.min(100,Math.round(e))),e>85?angular.forEach(j,function(a){a.style.backgroundColor="#008cdd"}):e>65?angular.forEach(i,function(a){a.style.backgroundColor="#6ead09"}):e>30?angular.forEach(h,function(a){a.style.backgroundColor="#e09115"}):g.style.backgroundColor="#e01414")})},template:'<span class="password-strength-indicator"><span></span><span></span><span></span><span></span></span>'}}),angular.module("ngappApp").directive("loading",["$http",function(a){return{restrict:"A",link:function(b,c,d){b.isLoading=function(){return a.pendingRequests.length>0},b.$watch(b.isLoading,function(a){a?c.show():c.hide()})}}}]),angular.module("ngappApp").filter("timestampToISO",function(){return function(a){return a=new Date(a).toISOString()}}),angular.module("ngappApp").controller("LoginCtrl",["$scope","$auth","$window","$rootScope","Notify",function(a,b,c,d,e){var f=this;f.login=function(){b.login({email:f.email,password:f.password}).then(function(){d.authenticated=!0,e.simpleNew("You have successfully logged in")})["catch"](function(a){c.Materialize.toast(a.data.message,3e3)})},f.authenticate=function(a){b.authenticate(a).then(function(){e.simpleNew("You have successfully connected")})["catch"](function(a){e["new"](a)})}}]),angular.module("ngappApp").controller("SignupCtrl",["$scope","$auth","$rootScope","Notify",function(a,b,c,d){var e=this;e.signup=function(){b.signup({displayName:e.displayName,email:e.email,department:e.department,password:e.password}).then(function(){c.authenticated=!0,d.simpleNew("Welcome! ")})["catch"](function(a){"object"==typeof a.data.message?angular.forEach(a.data.message,function(a){d.simpleNew(a)}):d.simpleNew(a.data.message)})}}]),angular.module("ngappApp").controller("LogoutCtrl",["$auth","$rootScope",function(a,b){a.isAuthenticated()&&a.logout().then(function(){b.authenticated=!1,console.log({content:"You have been logged out",animation:"fadeZoomFadeDown",type:"material",duration:3})})}]),angular.module("ngappApp").controller("ProfileCtrl",["$scope","$auth","Account","$http","$rootScope",function(a,b,c,d,e){var f=this;f.dump=function(){d.get("/twitter/dump").success(function(a){console.log(a)}).error(function(a){console.log({content:a,animation:"fadeZoomFadeDown",type:"material",duration:3})})},f.getProfile=function(){c.getProfile().success(function(a){f.editUser=a,e.$storage.application_local_user=a}).error(function(a){console.log({content:a.message,animation:"fadeZoomFadeDown",type:"material",duration:3})})},f.updateProfile=function(){c.updateProfile({displayName:f.editUser.displayName,department:f.editUser.department,email:f.editUser.email}).then(function(){e.$storage.application_local_user=angular.extend(e.$storage.application_local_user,f.editUser),console.log({content:"Profile has been updated",animation:"fadeZoomFadeDown",type:"material",duration:3})})},f.link=function(a){b.link(a).then(function(){console.log({content:"You have successfully linked "+a+" account",animation:"fadeZoomFadeDown",type:"material",duration:3})}).then(function(){f.getProfile()})["catch"](function(a){console.log({content:a.data.message,animation:"fadeZoomFadeDown",type:"material",duration:3})})},f.unlink=function(a){b.unlink(a).then(function(){console.log({content:"You have successfully unlinked "+a+" account",animation:"fadeZoomFadeDown",type:"material",duration:3})}).then(function(){f.getProfile()})["catch"](function(b){console.log({content:b.data?b.data.message:"Could not unlink "+a+" account",animation:"fadeZoomFadeDown",type:"material",duration:3})})},f.getProfile()}]),angular.module("ngappApp").factory("Modal",["$http","$compile","$rootScope","$document","$q","$controller","$timeout",function(a,b,c,d,e,f,g){function h(a){var d=e.defer();return j(a).then(function(e){var f=angular.element(e),g=c.$new(!1,a.scope),h={params:a.params||{},close:function(a){d.resolve(a),k(f,g)},dismiss:function(a){d.reject(a),k(f,g)}};g.$close=h.close,g.$dismiss=h.dismiss,b(f)(g);var j={complete:function(){h.dismiss()}};i(a,h,g),f.appendTo("body").openModal(j)},function(a){d.reject({templateError:a})}),d.promise}function i(a,b,c){if(a.controller){var d=f(a.controller,{$scope:c,$modalInstance:b});angular.isString(a.controllerAs)&&(c[a.controllerAs]=d)}}function j(b){var c=e.defer();return b.templateUrl?a.get(b.templateUrl).success(function(a){c.resolve(a)})["catch"](function(a){c.reject(a)}):c.resolve(b.template||""),c.promise.then(function(a){var c=b.fixedFooter?"modal modal-fixed-footer":"modal",d=[];return d.push('<div class="'+c+'">'),b.title&&(d.push('<div class="modal-header">'),d.push(b.title),d.push('<a class="grey-text text-darken-2 right" ng-click="$dismiss()">'),d.push('<i class="mdi-navigation-close" />'),d.push("</a>"),d.push("</div>")),d.push(a),d.push("</div>"),d.join("")})}function k(a,b){a.closeModal(),g(function(){b.$destroy(),a.remove()},5e3,!0)}return{open:h}}]),angular.module("ngappApp").service("Notify",["$window",function(a){var b=this;b["new"]=function(b){a.Materialize.toast(b.message,3e3),console.log(b)},b.simpleNew=function(b){a.Materialize.toast(b,3e3),console.log(obj)}}]),angular.module("ngappApp").factory("Account",["$http",function(a){return{getProfile:function(){return a.get("/api/user")},updateProfile:function(b){return a.put("/api/user",b)}}}]),angular.module("ngappApp").directive("helloUser",function(){return{restrict:"E",template:'<ul ng-show="$storage.application_local_user.displayName" class="left hide-on-med-and-down"><li class=""><a href="#/profile" >Hello {{$storage.application_local_user.displayName}}</a></li></ul>'}}),angular.module("ngappApp").directive("navLinks",function(){return{restrict:"E",template:'<li class=""><a href="#/">Home</a></li><li class="" ng-show="!authenticated"><a href="#/signup">Sign Up</a></li><li class="" ng-show="authenticated"><a ng-click="logout();">Log Out</a></li><li class="" ng-show="authenticated"><a href="#/profile">Profile</a></li><li class="" ng-show="authenticated"><a href="#/dashboard">Dashboard</a></li><li class="" ng-show="!authenticated"><a href="#/login">Log In</a></li>'}}),angular.module("ngappApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/login.html",'<div class="container"> <div class="row"> <div class="col s12 offset-m3 m6"> <div class="card-panel"> <h2 class="text-center">Log in</h2> <form method="post" ng-submit="login.login()" name="loginForm"> <div class="form-group has-feedback"> <input class="form-control input-lg" type="text" name="email" ng-model="login.email" placeholder="Email" required autofocus> <span class="ion-at form-control-feedback"></span> </div> <div class="form-group has-feedback"> <input class="form-control input-lg" type="password" name="password" ng-model="login.password" placeholder="Password" required> <span class="ion-key form-control-feedback"></span> </div> <button type="submit" ng-disabled="loginForm.$invalid" class="btn-large waves-effect waves-light">Log in</button> <br> <!--\n          <p class="text-center">\n          <a href="#">Forgot your password?</a>\n          </p>\n          --> <p class="text-center text-muted"> <small> Don\'t have an account yet? <a href="#/signup">Sign up</a> </small> </p> </form> <!--\n<button class="btn btn-block btn-facebook" ng-click="login.authenticate(\'facebook\')">\n<i class="ion-social-facebook"></i> Sign in with Facebook\n</button>\n<button class="btn btn-block btn-google-plus" ng-click="login.authenticate(\'google\')">\n<span class="ion-social-googleplus"></span>Sign in with Google\n</button>\n<button class="btn btn-block btn-linkedin" ng-click="login.authenticate(\'linkedin\')">\n<i class="ion-social-linkedin"></i> Sign in with LinkedIn\n</button>\n<button class="btn btn-block btn-twitter" ng-click="login.authenticate(\'twitter\')">\n<i class="ion-social-twitter"></i> Sign in with Twitter\n</button>\n<button class="btn btn-block btn-foursquare" ng-click="login.authenticate(\'foursquare\')">\n<i class="fa fa-foursquare"></i> Sign in with Foursquare\n</button>\n<button class="btn btn-block btn-github" ng-click="login.authenticate(\'github\')">\n<i class="ion-social-github"></i> Sign in with GitHub\n</button>\n<button class="btn btn-block btn-yahoo" ng-click="login.authenticate(\'yahoo\')">\n<i class="ion-social-yahoo"></i> Sign in with Yahoo\n</button>\n<button class="btn btn-block btn-live" ng-click="login.authenticate(\'live\')">\n<i class="ion-social-windows"></i> Sign in with Windows Live\n</button>\n--> </div> </div> </div> </div>'),a.put("views/logout.html","<p>This is the logout view.</p>"),a.put("views/main.html",'<div class="section no-pad-bot" style=""> <div class="row"> <div class="col offset-l1 l10 s12 white z-depth-1"> <article id="post-5" class="valign-wrapper post-5 page type-page status-publish hentry"> </article> </div> </div> </div> <div class="section"> <div class="row"> <div class="col offset-l1 l10 s12"> <div class="card-panel"> </div> </div> </div> </div> <div class="section"> <div class="row"> </div> <div class="row"> </div> </div>'),a.put("views/profile.html",'<div class="section"> <div class="row"> <div class="col s12 m6"> <div class="card green darken-3 white-text"> <form method="post" ng-submit="profile.updateProfile()"> <div class="card-content"> <span class="card-title">Profile</span> <!--\n<div class="form-group">\n<label class="control-label">Profile Picture</label>\n<img class="profile-picture" ng-src="{{profile.editUser.picture || \'http://placehold.it/100x100\'}}">\n</div>\n--> <input-field> <i class="material-icons prefix">perm_identity</i> <input required ng-minlength="1" ng-maxlength="120" length="120" type="text" ng-model="profile.editUser.displayName"> <label for="icon_prefix">Display Name</label> </input-field> <input-field> <select class="" name="department" required ng-model="profile.editUser.department" material-select watch> <option>Sales</option> <option>Management</option> <option>Admin</option> <option>Design</option> </select> </input-field> <input-field> <i class="material-icons prefix">email</i> <input required ng-minlength="1" ng-maxlength="320" length="320" type="email" ng-model="profile.editUser.email"> <label for="icon_prefix">Email Address</label> </input-field> </div> <div class="card-action"> <button class="btn btn-large purple">Update Information</button> </div> </form> </div> </div> <div class="col s12 m6"> <div class="card green darken-3 white-text"> <div class="card-content"> <span class="card-title">Profile</span> <p class="flow-text">Hello World!</p> </div> <div class="card-action"> <button class="btn btn-large purple"> <i class="material-icons left">remove</i> test </button> <button class="btn btn-large blue"> ing <i class="material-icons right">add</i> </button> </div> </div> </div> </div> </div>'),a.put("views/signup.html",'<div class="container"> <div class="row"> <div class="col s12 offset-m1 m10"> <div class="card-panel"> <h2 class="text-center">Sign up</h2> <form method="post" ng-submit="signup.signup()" name="signupForm"> <div input-field class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.displayName.$invalid && signupForm.displayName.$dirty }"> <input class="form-control input-lg" type="text" name="displayName" ng-model="signup.displayName" placeholder="Name" required autofocus> <span class="ion-person form-control-feedback"></span> <div class="help-block text-danger" ng-if="signupForm.displayName.$dirty" ng-messages="signupForm.displayName.$error"> <div ng-message="required">You must enter your name.</div> </div> </div> <div class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.department.$invalid && signupForm.department.$dirty }"> <select class="" name="department" required ng-model="signup.department" material-select watch> <option>Sales</option> <option>Management</option> <option>Admin</option> <option>Design</option> </select> <label for="icon_prefix">Department</label> <span class="ion-person form-control-feedback"></span> <div class="help-block text-danger" ng-if="signupForm.department.$dirty" ng-messages="signupForm.department.$error"> <div ng-message="required">You must select a department.</div> </div> </div> <div input-field class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.email.$invalid && signupForm.email.$dirty }"> <input class="form-control input-lg" type="email" id="email" name="email" ng-model="signup.email" placeholder="Email" required> <span class="ion-at form-control-feedback"></span> <div class="help-block text-danger" ng-if="signupForm.email.$dirty" ng-messages="signupForm.email.$error"> <div ng-message="required">Your email address is required.</div> <div ng-message="pattern">Your email address is invalid.</div> </div> </div> <div input-field class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.password.$invalid && signupForm.password.$dirty }"> <input password-strength class="form-control input-lg" type="password" name="password" ng-model="signup.password" placeholder="Password" required> <span class="ion-key form-control-feedback"></span> <div class="help-block text-danger" ng-if="signupForm.password.$dirty" ng-messages="signupForm.password.$error"> <div ng-message="required">Password is required.</div> </div> </div> <div input-field class="form-group has-feedback" ng-class="{ \'has-error\' : signupForm.confirmPassword.$invalid && signupForm.confirmPassword.$dirty }"> <input password-match="signup.password" class="form-control input-lg" type="password" name="confirmPassword" ng-model="signup.confirmPassword" placeholder="Confirm Password"> <span class="ion-key form-control-feedback"></span> <div class="help-block text-danger" ng-if="signupForm.confirmPassword.$dirty" ng-messages="signupForm.confirmPassword.$error"> <div ng-message="compareTo">Password must match.</div> </div> </div> <button type="submit" ng-disabled="signupForm.$invalid" class="btn-large waves-effect waves-light">Sign up</button> <br> <p class="text-center text-muted">Already have an account? <a href="#/login">Log in now</a></p> </form> </div> </div> </div> </div>')}]);